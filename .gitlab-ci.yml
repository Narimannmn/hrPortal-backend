stages:
  - test_backend
  - deploy_backend

test_backend:
  stage: test_backend
  image: docker:latest
  services:
    - docker:dind
  script:
    - apk add --no-cache ca-certificates curl expect coreutils
    - wget http://ftp.gnu.org/gnu/coreutils/coreutils-8.32.tar.xz
    - docker ps
    - echo "DATABASE_URI=postgres://${PUSER}:${PPASS}@db:5432/${PDB}" > .env
    - echo "PAYLOAD_SECRET={$PAYLOAD_SECRET}" >> .env
    - docker pull postgres:latest
    - docker pull node:18-alpine
    - docker compose -f docker-compose-test.yml up -d
    - sleep 60
    - docker logs test-back
  only:
    - main

deploy_backend:
  tags: ['deploy']
  stage: deploy_backend
  before_script:
    - git config --global http.postBuffer 524288000
    - git fetch --depth=1000
  script:
    - |
      if docker service rm eu_payload; then
        echo "Service removed successfully."
      else
        echo "Service not found, continuing..."
      fi
    - rm -rf /home/EUB/dshevche/eu-bank/Test/backend/
    - cd ..
    - cp -r backend/ /home/EUB/dshevche/eu-bank/Test
    - echo "Successfully copied"
    - cd /home/EUB/dshevche/
    - rm -rf builds/
    - cd /home/EUB/dshevche/eu-bank
    - cp /home/EUB/dshevche/eu-bank/backend-main/.env /home/EUB/dshevche/eu-bank/Test/backend
    - docker stack deploy -c docker-compose.yml eu
    - sleep 70
    - docker service logs --raw eu_payload
  only:
    - main
#Test4
